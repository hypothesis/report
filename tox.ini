[tox]
envlist = tests
skipsdist = true
requires =
    tox>=3.25.0,<4
    tox-envfile
    tox-faster
    tox-run-command

[testenv]
skip_install = true
setenv =
    PYTHONUNBUFFERED = 1
    OBJC_DISABLE_INITIALIZE_FORK_SAFETY = YES
    {dev,functests}: DEV = {env:DEV:true}
    dev: SENTRY_ENVIRONMENT = {env:SENTRY_ENVIRONMENT:dev}
    dev: NEW_RELIC_APP_NAME = {env:NEW_RELIC_APP_NAME:report}
    dev: NEW_RELIC_ENVIRONMENT = {env:NEW_RELIC_ENVIRONMENT:dev}
    tests: COVERAGE_FILE = {env:COVERAGE_FILE:.coverage.{envname}}
    dev: ALEMBIC_CONFIG = {env:ALEMBIC_CONFIG:conf/alembic.ini}
    dev: DATABASE_URL = {env:DATABASE_URL:postgresql://postgres@localhost:5436/postgres}
    tests: DATABASE_URL = {env:UNITTESTS_DATABASE_URL:postgresql://postgres@localhost:5436/report_tests}
    functests: DATABASE_URL = {env:FUNCTESTS_DATABASE_URL:postgresql://postgres@localhost:5436/report_functests}
    # From .cookiecutter/includes/tox/setenv:
    MB_DB_USER = {env:MB_DB_USER:postgres}
    # As it's Postgres itself that will be contacting these DBs, this will
    # happen inside docker, so we use docker names here
    H_US_DATABASE_URL = {env:H_US_DATABASE_URL:postgresql://report-fdw:password@h_postgres_1:5432/postgres}
    H_CA_DATABASE_URL = {env:H_CA_DATABASE_URL:postgresql://report-fdw:password@h_postgres_1:5432/postgres}
    LMS_US_DATABASE_URL = {env:LMS_US_DATABASE_URL:postgresql://report-fdw:password@lms_postgres_1:5432/postgres}
    LMS_CA_DATABASE_URL = {env:LMS_CA_DATABASE_URL:postgresql://report-fdw:password@lms_postgres_1:5432/postgres}
    # Used when testing tasks via `tox`:
    dev: NEW_RELIC_APP_NAME = {env: NEW_RELIC_APP_NAME:report}
    dev: NEW_RELIC_ENVIRONMENT = {env:NEW_RELIC_ENVIRONMENT:dev}
    dev: SENTRY_ENVIRONMENT = {env:SENTRY_ENVIRONMENT:dev}
passenv =
    HOME
    PYTEST_ADDOPTS
    PYTHONPATH
    dev: DEBUG
    dev: SENTRY_DSN
    dev: NEW_RELIC_LICENSE_KEY
    GUNICORN_CERTFILE
    GUNICORN_KEYFILE
    # From .cookiecutter/includes/tox/passenv:
    HUBSPOT_API_KEY
    NEW_RELIC_LICENSE_KEY
deps =
    pip-tools
    pip-sync-faster
depends =
    coverage: tests
allowlist_externals =
    tests,functests: sh
commands_pre =
    pip-sync-faster requirements/{env:TOX_ENV_NAME}.txt --pip-args '--disable-pip-version-check'
commands =
    tests: sh bin/create-db report_tests
    functests: sh bin/create-db report_functests
    dev: {posargs:supervisord -c conf/supervisord-dev.conf}
    format: black report tests bin
    format: isort --atomic report tests bin
    checkformatting: black --check report tests bin
    checkformatting: isort --quiet --check-only report tests bin
    lint: pylint report bin
    lint: pylint --rcfile=tests/pyproject.toml tests
    lint: pydocstyle report tests bin
    lint: pycodestyle report tests bin
    tests: python -m pytest --cov --cov-report= --cov-fail-under=0 {posargs:tests/unit/}
    functests: python -m pytest --failed-first --new-first --no-header --quiet {posargs:tests/functional/}
    coverage: coverage combine
    coverage: coverage report
    typecheck: mypy report
    template: python3 bin/make_template {posargs}

[testenv:dev]
# By default when you Ctrl-c the `make dev` command tox is too aggressive about
# killing supervisor. tox kills supervisor before supervisor has had time to
# stop or kill its child processes, resulting in detached child processes being
# left running and other problems.
#
# Fix this by configuring tox to wait a long time before sending any further
# SIGINTs (after the first one) or SIGTERMs or SIGKILLs to supervisor.
# Just trust supervisor to clean up all its child processes and stop.
suicide_timeout = 60.0
interrupt_timeout = 60.0
terminate_timeout = 60.0
